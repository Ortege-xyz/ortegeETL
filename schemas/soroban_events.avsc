{
  "type": "record",
  "name": "getEventsResult",
  "fields": [
    {
      "name": "latestLedger",
      "type": "int",
      "doc": "The sequence number of the latest ledger known to Soroban RPC at the time it handled the request."
    },
    {
      "name": "events",
      "type": {
        "type": "array",
        "items": {
          "type": "record",
          "name": "Event",
          "fields": [
            {
              "name": "type",
              "type": "string",
              "doc": "The type of event emission.",
              "symbols": ["contract", "diagnostic", "system", "ledger"]
            },
            {
              "name": "ledger",
              "type": "int",
              "doc": "Sequence number of the ledger in which this event was emitted."
            },
            {
              "name": "ledgerClosedAt",
              "type": "string",
              "doc": "ISO-8601 timestamp of the ledger closing time"
            },
            {
              "name": "contractId",
              "type": "string",
              "doc": "StrKey representation of the contract address that emitted this event."
            },
            {
              "name": "id",
              "type": "string",
              "doc": "Unique identifier for this event."
            },
            {
              "name": "pagingToken",
              "type": "string",
              "doc": "Duplicate of id field, but in the standard place for pagination tokens."
            },
            {
              "name": "inSuccessfulContractCall",
              "type": "boolean",
              "doc": "If true, the event was emitted during a successful contract call."
            },
            {
              "name": "topic",
              "type": {
                "type": "array",
                "items": "string",
                "minItems": 1,
                "maxItems": 4
              },
              "doc": "List containing the topic this event was emitted with."
            },
            {
              "name": "value",
              "type": {
                "type": "record",
                "name": "EventValue",
                "fields": [
                  {
                    "name": "xdr",
                    "type": "string",
                    "doc": "The emitted body value of the event (serialized in a base64 string)."
                  }
                ]
              },
              "doc": "The data the event was broadcasting in the emitted event."
            }
          ]
        }
      },
      "doc": "Array of events."
    }
  ]
}
